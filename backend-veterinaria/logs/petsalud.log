2025-10-29 14:30:57 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Starting VeterinariaApplication using Java 25 with PID 5940 (C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria\target\classes started by Rodrigo Aniceto in C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria)
2025-10-29 14:30:57 [restartedMain] DEBUG com.petsalud.VeterinariaApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-10-29 14:30:57 [restartedMain] INFO  com.petsalud.VeterinariaApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-29 14:30:57 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-29 14:30:57 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-29 14:30:58 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-29 14:30:58 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 93 ms. Found 10 JPA repository interfaces.
2025-10-29 14:30:59 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-29 14:30:59 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-29 14:30:59 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-10-29 14:30:59 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-29 14:30:59 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-29 14:30:59 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-10-29 14:30:59 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-29 14:30:59 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2191 ms
2025-10-29 14:30:59 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-29 14:30:59 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@64ac6da7
2025-10-29 14:30:59 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-29 14:30:59 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3308/veterinaria_petsalud?useSSL=false&serverTimezone=America/Lima&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true'
2025-10-29 14:30:59 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-29 14:30:59 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-10-29 14:30:59 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-29 14:31:00 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-29 14:31:00 [restartedMain] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-10-29 14:31:00 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-29 14:31:01 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-29 14:31:01 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-29 14:31:01 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-29 14:31:03 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-29 14:31:03 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-10-29 14:31:03 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1c3b1628, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8f71acb, org.springframework.security.web.context.SecurityContextHolderFilter@65f83723, org.springframework.security.web.header.HeaderWriterFilter@c04d288, org.springframework.web.filter.CorsFilter@6365d16b, org.springframework.security.web.authentication.logout.LogoutFilter@2e65ed91, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e4a6da1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c5055c6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@cd80670, org.springframework.security.web.session.SessionManagementFilter@25f7c437, org.springframework.security.web.access.ExceptionTranslationFilter@52974ca3, org.springframework.security.web.access.intercept.AuthorizationFilter@4f85038f]
2025-10-29 14:31:04 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-29 14:31:04 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-10-29 14:31:04 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Started VeterinariaApplication in 7.87 seconds (process running for 8.31)
2025-10-29 14:40:38 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-29 14:40:38 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-29 14:40:38 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
2025-10-29 14:40:39 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.bloqueado,
        u1_0.contrasena,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.intentos_fallidos,
        u1_0.nombre_usuario,
        u1_0.nombres,
        u1_0.rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.nombre_usuario=?
2025-10-29 14:41:42 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.bloqueado,
        u1_0.contrasena,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.intentos_fallidos,
        u1_0.nombre_usuario,
        u1_0.nombres,
        u1_0.rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.nombre_usuario=?
2025-10-29 14:44:39 [http-nio-8080-exec-6] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":0}] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2025-10-29 14:47:35 [http-nio-8080-exec-3] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@64ac6da7 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-10-29 14:47:35 [http-nio-8080-exec-3] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@2a77e939 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-10-29 14:47:35 [http-nio-8080-exec-3] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@23f36306 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-10-29 14:47:35 [http-nio-8080-exec-3] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@11fa2b99 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-10-29 14:47:35 [http-nio-8080-exec-3] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@1bcc4810 (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
2025-10-29 14:47:35 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.bloqueado,
        u1_0.contrasena,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.intentos_fallidos,
        u1_0.nombre_usuario,
        u1_0.nombres,
        u1_0.rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.nombre_usuario=?
2025-10-29 14:47:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.bloqueado,
        u1_0.contrasena,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.intentos_fallidos,
        u1_0.nombre_usuario,
        u1_0.nombres,
        u1_0.rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.nombre_usuario=?
2025-10-29 14:47:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.bloqueado,
        u1_0.contrasena,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.intentos_fallidos,
        u1_0.nombre_usuario,
        u1_0.nombres,
        u1_0.rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.nombre_usuario=?
2025-10-29 14:49:24 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.bloqueado,
        u1_0.contrasena,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.intentos_fallidos,
        u1_0.nombre_usuario,
        u1_0.nombres,
        u1_0.rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.nombre_usuario=?
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:50:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:50:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-29 14:50:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:50:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:50:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:50:36 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:50:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:50:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:50:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:50:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:50:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:50:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:50:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:50:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:50:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:50:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:50:37 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:50:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:50:40 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:50:42 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-29 14:50:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0
2025-10-29 14:51:06 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-29 14:51:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0
2025-10-29 14:51:12 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:51:13 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:51:21 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0
2025-10-29 14:57:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0
2025-10-29 14:57:06 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-29 14:57:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:57:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:57:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:57:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:57:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:57:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:57:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:57:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:57:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:57:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:57:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:57:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:57:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:57:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:57:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:57:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:57:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:57:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:57:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:57:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:57:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:57:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:57:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:57:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-29 14:57:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0
2025-10-29 14:57:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 14:57:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 14:57:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 14:57:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 14:57:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 14:57:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 14:57:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 14:57:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 14:57:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 14:57:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 14:57:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        com.petsalud.model.Mascota */insert 
    into
        mascotas (color, id_dueno, edad, especie, nombre, observaciones, peso, raza, sexo) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-29 14:57:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-29 14:57:38 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0 
    where
        d1_0.id_dueno=?
2025-10-29 14:57:38 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.Mascota["dueno"]->com.petsalud.model.Dueno$HibernateProxy$Li1rg5oS["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-29 14:57:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0
2025-10-29 14:57:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 14:57:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        o1_0.id_mascota,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        o1_0.id_veterinario 
    from
        ordenes_veterinarias o1_0 
    left join
        toma_muestras_vet tm1_0 
            on o1_0.id_orden=tm1_0.id_orden 
    where
        o1_0.id_mascota=?
2025-10-29 14:57:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 14:57:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 14:57:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 14:57:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 14:57:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 14:57:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 14:57:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 14:57:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 14:57:57 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:57:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:58:02 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:03 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:58:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:58:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:58:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:58:04 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:58:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:58:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:58:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:58:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:58:04 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:58:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:58:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:58:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:58:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:58:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:58:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:58:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:58:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:58:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:58:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:58:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:58:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:58:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:58:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:58:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:58:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:58:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:17 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:58:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:58:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:58:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:58:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:58:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:58:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:58:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:58:17 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:58:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:05 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:59:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:09 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:59:13 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:59:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:17 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:59:18 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:59:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:59:20 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:59:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:59:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:59:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:59:20 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:59:20 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 14:59:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 14:59:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 14:59:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 14:59:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 14:59:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 14:59:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 14:59:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:59:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 14:59:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 14:59:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 14:59:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 14:59:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 14:59:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 14:59:29 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:02:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-29 15:02:34 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0 
    where
        d1_0.id_dueno=?
2025-10-29 15:02:34 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.Mascota["dueno"]->com.petsalud.model.Dueno$HibernateProxy$Li1rg5oS["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-29 15:02:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0
2025-10-29 15:02:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 15:02:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        o1_0.id_mascota,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        o1_0.id_veterinario 
    from
        ordenes_veterinarias o1_0 
    left join
        toma_muestras_vet tm1_0 
            on o1_0.id_orden=tm1_0.id_orden 
    where
        o1_0.id_mascota=?
2025-10-29 15:02:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 15:02:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 15:02:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 15:02:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 15:02:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 15:02:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 15:02:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 15:02:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 15:02:37 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 15:04:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* insert for
        com.petsalud.model.Mascota */insert 
    into
        mascotas (color, id_dueno, edad, especie, nombre, observaciones, peso, raza, sexo) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-29 15:04:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-29 15:04:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0 
    where
        d1_0.id_dueno=?
2025-10-29 15:04:03 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.Mascota["dueno"]->com.petsalud.model.Dueno$HibernateProxy$Li1rg5oS["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-29 15:04:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0
2025-10-29 15:04:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 15:04:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        o1_0.id_mascota,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        o1_0.id_veterinario 
    from
        ordenes_veterinarias o1_0 
    left join
        toma_muestras_vet tm1_0 
            on o1_0.id_orden=tm1_0.id_orden 
    where
        o1_0.id_mascota=?
2025-10-29 15:04:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 15:04:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 15:04:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        o1_0.id_mascota,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        o1_0.id_veterinario 
    from
        ordenes_veterinarias o1_0 
    left join
        toma_muestras_vet tm1_0 
            on o1_0.id_orden=tm1_0.id_orden 
    where
        o1_0.id_mascota=?
2025-10-29 15:04:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 15:04:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 15:04:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 15:04:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 15:04:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 15:04:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 15:04:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 15:04:28 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-29 15:04:28 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0 
    where
        d1_0.id_dueno=?
2025-10-29 15:04:28 [http-nio-8080-exec-10] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.Mascota["dueno"]->com.petsalud.model.Dueno$HibernateProxy$Li1rg5oS["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 15:04:29 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:31 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:31 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 15:04:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 15:04:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 15:04:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 15:04:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 15:04:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 15:04:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:31 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 15:04:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 15:04:35 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 15:04:45 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:48 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 15:04:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:56 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 15:04:57 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:04:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-29 15:04:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0 
    where
        d1_0.id_dueno=?
2025-10-29 15:04:58 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.Mascota["dueno"]->com.petsalud.model.Dueno$HibernateProxy$Li1rg5oS["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 15:05:02 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 15:06:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 15:07:17 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 15:07:25 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:07:37 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.bloqueado,
        u1_0.contrasena,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.intentos_fallidos,
        u1_0.nombre_usuario,
        u1_0.nombres,
        u1_0.rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.nombre_usuario=?
2025-10-29 15:07:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.bloqueado,
        u1_0.contrasena,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.intentos_fallidos,
        u1_0.nombre_usuario,
        u1_0.nombres,
        u1_0.rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.nombre_usuario=?
2025-10-29 15:14:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:14:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:14:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:14:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:14:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-29 15:14:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-29 15:14:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-29 15:14:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-29 15:14:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-29 15:14:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-29 15:14:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:14:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:14:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:14:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:14:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:14:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:14:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-29 15:14:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-29 15:14:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-29 15:14:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-29 15:14:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-29 15:14:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-29 15:14:14 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-29 15:14:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-29 15:14:17 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0 
    where
        d1_0.id_dueno=?
2025-10-29 15:14:17 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.Mascota["dueno"]->com.petsalud.model.Dueno$HibernateProxy$Li1rg5oS["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-29 15:14:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0
2025-10-29 15:14:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 15:14:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        o1_0.id_mascota,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        o1_0.id_veterinario 
    from
        ordenes_veterinarias o1_0 
    left join
        toma_muestras_vet tm1_0 
            on o1_0.id_orden=tm1_0.id_orden 
    where
        o1_0.id_mascota=?
2025-10-29 15:14:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 15:14:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 15:14:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        o1_0.id_mascota,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        o1_0.id_veterinario 
    from
        ordenes_veterinarias o1_0 
    left join
        toma_muestras_vet tm1_0 
            on o1_0.id_orden=tm1_0.id_orden 
    where
        o1_0.id_mascota=?
2025-10-29 15:14:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 15:14:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 15:14:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 15:14:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 15:14:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 15:14:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_dueno,
        m1_0.id_mascota,
        m1_0.color,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_dueno=?
2025-10-29 15:14:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        f1_0.id_dueno,
        f1_0.id_factura,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.id_dueno=?
2025-10-29 15:14:44 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* insert for
        com.petsalud.model.Mascota */insert 
    into
        mascotas (color, id_dueno, edad, especie, nombre, observaciones, peso, raza, sexo) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-29 15:14:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-29 15:14:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0 
    where
        d1_0.id_dueno=?
2025-10-29 15:14:44 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.Mascota["dueno"]->com.petsalud.model.Dueno$HibernateProxy$Li1rg5oS["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
