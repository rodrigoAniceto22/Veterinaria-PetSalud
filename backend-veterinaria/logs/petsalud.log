2025-10-31 19:05:42 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Starting VeterinariaApplication using Java 25 with PID 22636 (C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria\target\classes started by Rodrigo Aniceto in C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria)
2025-10-31 19:05:42 [restartedMain] DEBUG com.petsalud.VeterinariaApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-10-31 19:05:42 [restartedMain] INFO  com.petsalud.VeterinariaApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-31 19:05:42 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-31 19:05:42 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-31 19:05:43 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-31 19:05:43 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 77 ms. Found 13 JPA repository interfaces.
2025-10-31 19:05:44 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:05:44 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:05:44 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-10-31 19:05:44 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-31 19:05:44 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-31 19:05:44 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-10-31 19:05:44 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-31 19:05:44 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2006 ms
2025-10-31 19:05:44 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-31 19:05:45 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5dd5932b
2025-10-31 19:05:45 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-31 19:05:45 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3308/veterinaria_petsalud?useSSL=false&serverTimezone=America/Lima&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true'
2025-10-31 19:05:45 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-31 19:05:45 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-10-31 19:05:45 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-31 19:05:45 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-31 19:05:45 [restartedMain] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-10-31 19:05:45 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-31 19:05:47 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-31 19:05:47 [restartedMain] DEBUG org.hibernate.SQL - 
    create table citas (
        id_cita bigint not null auto_increment,
        costo_consulta float(53),
        duracion_minutos integer,
        estado varchar(50),
        fecha_hora datetime(6) not null,
        motivo varchar(200) not null,
        observaciones TEXT,
        recordatorio_enviado bit,
        tipo_cita varchar(100),
        id_mascota bigint not null,
        id_veterinario bigint,
        primary key (id_cita)
    ) engine=InnoDB
2025-10-31 19:05:47 [restartedMain] DEBUG org.hibernate.SQL - 
    create table inventario (
        id_inventario bigint not null auto_increment,
        activo bit,
        categoria varchar(100),
        codigo varchar(50) not null,
        descripcion TEXT,
        fecha_vencimiento date,
        nombre varchar(200) not null,
        observaciones TEXT,
        precio_compra float(53) not null,
        precio_venta float(53) not null,
        proveedor varchar(200),
        stock_actual integer not null,
        stock_maximo integer,
        stock_minimo integer,
        unidad_medida varchar(50),
        primary key (id_inventario)
    ) engine=InnoDB
2025-10-31 19:05:47 [restartedMain] DEBUG org.hibernate.SQL - 
    create table pagos (
        id_pago bigint not null auto_increment,
        concepto varchar(200) not null,
        costo_dia_internamiento float(53),
        dias_internamiento integer,
        es_internamiento bit,
        estado varchar(50),
        fecha_emision date not null,
        fecha_fin_internamiento datetime(6),
        fecha_inicio_internamiento datetime(6),
        fecha_pago datetime(6),
        fecha_vencimiento date,
        metodo_pago varchar(50),
        monto float(53) not null,
        monto_pagado float(53),
        numero_pago varchar(50),
        observaciones TEXT,
        tipo_pago varchar(50),
        id_dueno bigint not null,
        id_mascota bigint,
        primary key (id_pago)
    ) engine=InnoDB
2025-10-31 19:05:47 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table inventario 
       drop index UK_d6d1h2cgqw41yikwobahvcsrr
2025-10-31 19:05:47 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table inventario 
       add constraint UK_d6d1h2cgqw41yikwobahvcsrr unique (codigo)
2025-10-31 19:05:47 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table pagos 
       drop index UK_hk9ombikyj5vtthqer6fx9m6m
2025-10-31 19:05:47 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table pagos 
       add constraint UK_hk9ombikyj5vtthqer6fx9m6m unique (numero_pago)
2025-10-31 19:05:47 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table citas 
       add constraint FKrwbcu7mda19wik97yjt7h2nx7 
       foreign key (id_mascota) 
       references mascotas (id_mascota)
2025-10-31 19:05:47 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table citas 
       add constraint FKnb4mglmv619yt5vy0u0gggq7m 
       foreign key (id_veterinario) 
       references veterinarios (id_veterinario)
2025-10-31 19:05:47 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table pagos 
       add constraint FK5hsi1bo0k4si4it4ueyh5afsb 
       foreign key (id_dueno) 
       references duenos (id_dueno)
2025-10-31 19:05:47 [restartedMain] DEBUG org.hibernate.SQL - 
    alter table pagos 
       add constraint FKmkksr30bxhyavuoi772973hjb 
       foreign key (id_mascota) 
       references mascotas (id_mascota)
2025-10-31 19:05:47 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-31 19:05:48 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-31 19:05:49 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-31 19:05:50 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-10-31 19:05:50 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2387a817, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@307390d, org.springframework.security.web.context.SecurityContextHolderFilter@20cb21fc, org.springframework.security.web.header.HeaderWriterFilter@68df0ea0, org.springframework.web.filter.CorsFilter@580223a4, org.springframework.security.web.authentication.logout.LogoutFilter@8288a8c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ddfda8c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@51763a15, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7479844f, org.springframework.security.web.session.SessionManagementFilter@27bc014a, org.springframework.security.web.access.ExceptionTranslationFilter@6a261c88, org.springframework.security.web.access.intercept.AuthorizationFilter@4421a169]
2025-10-31 19:05:50 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-31 19:05:50 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-10-31 19:05:50 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Started VeterinariaApplication in 8.49 seconds (process running for 8.942)
2025-10-31 19:06:43 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-31 19:06:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-31 19:06:43 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-31 19:06:43 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        u1_0.id_usuario,
        u1_0.activo,
        u1_0.apellidos,
        u1_0.bloqueado,
        u1_0.contrasena,
        u1_0.email,
        u1_0.fecha_creacion,
        u1_0.intentos_fallidos,
        u1_0.nombre_usuario,
        u1_0.nombres,
        u1_0.rol,
        u1_0.ultimo_acceso 
    from
        usuarios u1_0 
    where
        u1_0.nombre_usuario=?
2025-10-31 19:06:57 [http-nio-8080-exec-3] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":0}] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:08:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:08:25 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:08:29 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:08:31 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:08:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0
2025-10-31 19:08:36 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:08:46 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:08:48 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:08:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:08:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:08:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:08:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:08:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:08:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:08:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:08:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:08:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:08:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:07 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:09:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:09:07 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:09:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:09:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:09:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:09:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:09:07 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:09:07 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:09:08 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:09:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:09:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:09:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:09:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:09:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:09:08 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:09:11 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:26 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:09:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:09:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:09:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:09:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:09:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:09:26 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:09:26 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:33 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:09:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:09:33 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:09:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:09:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:09:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:09:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:09:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:09:33 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:09:36 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:09:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:09:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:09:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:42 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:09:43 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:09:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:12:50 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Starting VeterinariaApplication using Java 25 with PID 40020 (C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria\target\classes started by Rodrigo Aniceto in C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria)
2025-10-31 19:12:50 [restartedMain] DEBUG com.petsalud.VeterinariaApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-10-31 19:12:50 [restartedMain] INFO  com.petsalud.VeterinariaApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-31 19:12:50 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-31 19:12:50 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-31 19:12:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-31 19:12:51 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 71 ms. Found 13 JPA repository interfaces.
2025-10-31 19:12:51 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:12:51 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:12:51 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-10-31 19:12:51 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-31 19:12:51 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-31 19:12:51 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-10-31 19:12:51 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-31 19:12:51 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1582 ms
2025-10-31 19:12:52 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-31 19:12:52 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@14d9f749
2025-10-31 19:12:52 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-31 19:12:52 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3308/veterinaria_petsalud?useSSL=false&serverTimezone=America/Lima&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true'
2025-10-31 19:12:52 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-31 19:12:52 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-10-31 19:12:52 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-31 19:12:52 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-31 19:12:52 [restartedMain] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-10-31 19:12:52 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-31 19:12:53 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-31 19:12:53 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-31 19:12:54 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-31 19:12:55 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-31 19:12:56 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-10-31 19:12:56 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6a40c06a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4326648f, org.springframework.security.web.context.SecurityContextHolderFilter@550ba2ea, org.springframework.security.web.header.HeaderWriterFilter@7d4abb9d, org.springframework.web.filter.CorsFilter@3f899766, org.springframework.security.web.authentication.logout.LogoutFilter@36cd0090, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@70045a0a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@67e730d9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3948c91, org.springframework.security.web.session.SessionManagementFilter@25572f81, org.springframework.security.web.access.ExceptionTranslationFilter@42841f99, org.springframework.security.web.access.intercept.AuthorizationFilter@324396b2]
2025-10-31 19:12:56 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-31 19:12:56 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-10-31 19:12:56 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Started VeterinariaApplication in 6.668 seconds (process running for 7.031)
2025-10-31 19:13:48 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-31 19:13:48 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-31 19:13:48 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:13:48 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:13:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:14:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:14:27 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:14:52 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:14:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:14:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:14:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:19:29 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:32:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:32:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:20 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_mascota=?
2025-10-31 19:32:20 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.OrdenVeterinaria["mascota"]->com.petsalud.model.Mascota$HibernateProxy$9O5OO8bg["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-31 19:32:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:32:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:21 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_mascota=?
2025-10-31 19:32:21 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.OrdenVeterinaria["mascota"]->com.petsalud.model.Mascota$HibernateProxy$9O5OO8bg["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:30 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:32:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:32:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:32:30 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:32:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:32:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:32:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:30 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:37 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:32:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:32:37 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:32:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:37 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:43 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:32:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:32:43 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:32:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:32:44 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:32:44 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:32:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:44 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:45 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:32:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:32:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:32:45 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:32:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:32:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:32:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:32:45 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:45 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:48 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_mascota=?
2025-10-31 19:32:49 [http-nio-8080-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.OrdenVeterinaria["mascota"]->com.petsalud.model.Mascota$HibernateProxy$9O5OO8bg["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-31 19:32:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        v1_0.id_veterinario,
        v1_0.activo,
        v1_0.apellidos,
        v1_0.colegiatura,
        v1_0.email,
        v1_0.especialidad,
        v1_0.nombres,
        v1_0.telefono 
    from
        veterinarios v1_0
2025-10-31 19:32:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-31 19:32:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0 
    where
        d1_0.id_dueno=?
2025-10-31 19:32:50 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.Mascota["dueno"]->com.petsalud.model.Dueno$HibernateProxy$g5vAOq5W["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-31 19:32:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        o1_0.id_veterinario,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra 
    from
        ordenes_veterinarias o1_0 
    left join
        toma_muestras_vet tm1_0 
            on o1_0.id_orden=tm1_0.id_orden 
    where
        o1_0.id_veterinario=?
2025-10-31 19:32:50 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_mascota=?
2025-10-31 19:32:50 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.Veterinario["ordenes"]->org.hibernate.collection.spi.PersistentBag[0]->com.petsalud.model.OrdenVeterinaria["mascota"]->com.petsalud.model.Mascota$HibernateProxy$9O5OO8bg["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:36:07 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:37:05 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:37:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:37:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:37:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:37:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:37:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:37:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:37:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:37:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:37:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:37:34 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_mascota=?
2025-10-31 19:37:34 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.OrdenVeterinaria["mascota"]->com.petsalud.model.Mascota$HibernateProxy$9O5OO8bg["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-31 19:37:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-31 19:37:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        v1_0.id_veterinario,
        v1_0.activo,
        v1_0.apellidos,
        v1_0.colegiatura,
        v1_0.email,
        v1_0.especialidad,
        v1_0.nombres,
        v1_0.telefono 
    from
        veterinarios v1_0
2025-10-31 19:37:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        o1_0.id_veterinario,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra 
    from
        ordenes_veterinarias o1_0 
    left join
        toma_muestras_vet tm1_0 
            on o1_0.id_orden=tm1_0.id_orden 
    where
        o1_0.id_veterinario=?
2025-10-31 19:37:35 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0 
    where
        d1_0.id_dueno=?
2025-10-31 19:37:35 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_mascota=?
2025-10-31 19:37:35 [http-nio-8080-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.Mascota["dueno"]->com.petsalud.model.Dueno$HibernateProxy$g5vAOq5W["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-31 19:37:35 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.Veterinario["ordenes"]->org.hibernate.collection.spi.PersistentBag[0]->com.petsalud.model.OrdenVeterinaria["mascota"]->com.petsalud.model.Mascota$HibernateProxy$9O5OO8bg["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-31 19:38:23 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Starting VeterinariaApplication using Java 25 with PID 45040 (C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria\target\classes started by Rodrigo Aniceto in C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria)
2025-10-31 19:38:23 [restartedMain] DEBUG com.petsalud.VeterinariaApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-10-31 19:38:23 [restartedMain] INFO  com.petsalud.VeterinariaApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-31 19:38:23 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-31 19:38:23 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-31 19:38:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-31 19:38:24 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 80 ms. Found 13 JPA repository interfaces.
2025-10-31 19:38:25 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:38:25 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:38:25 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-10-31 19:38:25 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-31 19:38:25 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-31 19:38:25 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-10-31 19:38:25 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-31 19:38:25 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1728 ms
2025-10-31 19:38:25 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-31 19:38:25 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@c3526a9
2025-10-31 19:38:25 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-31 19:38:25 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3308/veterinaria_petsalud?useSSL=false&serverTimezone=America/Lima&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true'
2025-10-31 19:38:25 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-31 19:38:25 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-10-31 19:38:25 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-31 19:38:26 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-31 19:38:26 [restartedMain] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-10-31 19:38:26 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-31 19:38:27 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-31 19:38:27 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-31 19:38:27 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-31 19:38:29 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-31 19:38:29 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-10-31 19:38:29 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@33584262, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@22bfd88f, org.springframework.security.web.context.SecurityContextHolderFilter@7ad9685d, org.springframework.security.web.header.HeaderWriterFilter@265f3747, org.springframework.web.filter.CorsFilter@485ee046, org.springframework.security.web.authentication.logout.LogoutFilter@884136c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7ee8307f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19e9525c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@33c0c4a0, org.springframework.security.web.session.SessionManagementFilter@4316a981, org.springframework.security.web.access.ExceptionTranslationFilter@24085df6, org.springframework.security.web.access.intercept.AuthorizationFilter@7341f85e]
2025-10-31 19:38:30 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-31 19:38:30 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-10-31 19:38:30 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Started VeterinariaApplication in 7.217 seconds (process running for 7.603)
2025-10-31 19:38:52 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-31 19:38:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-31 19:38:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:38:52 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:38:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:38:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:38:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:38:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:38:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:38:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:38:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:38:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:38:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:38:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_mascota=?
2025-10-31 19:38:54 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.OrdenVeterinaria["mascota"]->com.petsalud.model.Mascota$HibernateProxy$kFkTYhlj["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-31 19:38:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        v1_0.id_veterinario,
        v1_0.activo,
        v1_0.apellidos,
        v1_0.colegiatura,
        v1_0.email,
        v1_0.especialidad,
        v1_0.nombres,
        v1_0.telefono 
    from
        veterinarios v1_0
2025-10-31 19:38:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-31 19:38:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0 
    where
        d1_0.id_dueno=?
2025-10-31 19:38:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        o1_0.id_veterinario,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra 
    from
        ordenes_veterinarias o1_0 
    left join
        toma_muestras_vet tm1_0 
            on o1_0.id_orden=tm1_0.id_orden 
    where
        o1_0.id_veterinario=?
2025-10-31 19:38:55 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.Mascota["dueno"]->com.petsalud.model.Dueno$HibernateProxy$YLhAyiWK["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-31 19:38:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_mascota=?
2025-10-31 19:38:55 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.Veterinario["ordenes"]->org.hibernate.collection.spi.PersistentBag[0]->com.petsalud.model.OrdenVeterinaria["mascota"]->com.petsalud.model.Mascota$HibernateProxy$kFkTYhlj["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-31 19:41:02 [http-nio-8080-exec-5] INFO  o.a.tomcat.util.http.parser.Cookie - A cookie header was received [g_state={"i_l":0}] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2025-10-31 19:41:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-31 19:41:02 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0 
    where
        d1_0.id_dueno=?
2025-10-31 19:41:02 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.springframework.http.converter.HttpMessageConversionException: Type definition error: [simple type, class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor]] with root cause
com.fasterxml.jackson.databind.exc.InvalidDefinitionException: No serializer found for class org.hibernate.proxy.pojo.bytebuddy.ByteBuddyInterceptor and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS) (through reference chain: java.util.ArrayList[0]->com.petsalud.model.Mascota["dueno"]->com.petsalud.model.Dueno$HibernateProxy$YLhAyiWK["hibernateLazyInitializer"])
	at com.fasterxml.jackson.databind.exc.InvalidDefinitionException.from(InvalidDefinitionException.java:77)
	at com.fasterxml.jackson.databind.SerializerProvider.reportBadDefinition(SerializerProvider.java:1308)
	at com.fasterxml.jackson.databind.DatabindContext.reportBadDefinition(DatabindContext.java:414)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.failForEmpty(UnknownSerializer.java:53)
	at com.fasterxml.jackson.databind.ser.impl.UnknownSerializer.serialize(UnknownSerializer.java:30)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:732)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:772)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:178)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:145)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:107)
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:25)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:479)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:399)
	at com.fasterxml.jackson.databind.ObjectWriter$Prefetch.serialize(ObjectWriter.java:1568)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:1061)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:483)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:114)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:297)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:245)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:78)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-31 19:43:42 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (0 additions, 0 deletions, 1 modification)
2025-10-31 19:43:42 [Thread-5] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-31 19:43:42 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-31 19:43:42 [Thread-5] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-31 19:43:42 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Starting VeterinariaApplication using Java 25 with PID 45040 (C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria\target\classes started by Rodrigo Aniceto in C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria)
2025-10-31 19:43:42 [restartedMain] DEBUG com.petsalud.VeterinariaApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-10-31 19:43:42 [restartedMain] INFO  com.petsalud.VeterinariaApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-31 19:43:42 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-31 19:43:43 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 28 ms. Found 13 JPA repository interfaces.
2025-10-31 19:43:43 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:43:43 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:43:43 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-10-31 19:43:43 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-31 19:43:43 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-31 19:43:43 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-10-31 19:43:43 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-31 19:43:43 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 474 ms
2025-10-31 19:43:43 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-10-31 19:43:43 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1c662a96
2025-10-31 19:43:43 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-10-31 19:43:43 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3308/veterinaria_petsalud?useSSL=false&serverTimezone=America/Lima&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true'
2025-10-31 19:43:43 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-31 19:43:43 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-31 19:43:43 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-31 19:43:43 [restartedMain] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-10-31 19:43:43 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-31 19:43:43 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-31 19:43:43 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-31 19:43:44 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-31 19:43:44 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-10-31 19:43:44 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@e62bdb8, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2d90cd2d, org.springframework.security.web.context.SecurityContextHolderFilter@5f2d849, org.springframework.security.web.header.HeaderWriterFilter@13e55aaa, org.springframework.web.filter.CorsFilter@21265904, org.springframework.security.web.authentication.logout.LogoutFilter@34894979, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@62c71e38, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2d98a40d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@111c512e, org.springframework.security.web.session.SessionManagementFilter@6459a21d, org.springframework.security.web.access.ExceptionTranslationFilter@73c31b6e, org.springframework.security.web.access.intercept.AuthorizationFilter@58edfd0d]
2025-10-31 19:43:45 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-31 19:43:45 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-10-31 19:43:45 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Started VeterinariaApplication in 2.462 seconds (process running for 322.368)
2025-10-31 19:43:45 [restartedMain] INFO  o.s.b.d.a.ConditionEvaluationDeltaLoggingListener - Condition evaluation unchanged
2025-10-31 19:44:32 [File Watcher] INFO  o.s.b.d.a.LocalDevToolsAutoConfiguration$RestartingClassPathChangeChangedEventListener - Restarting due to 1 class path change (1 addition, 0 deletions, 0 modifications)
2025-10-31 19:44:32 [Thread-7] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-31 19:44:32 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-10-31 19:44:32 [Thread-7] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-10-31 19:44:32 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Starting VeterinariaApplication using Java 25 with PID 45040 (C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria\target\classes started by Rodrigo Aniceto in C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria)
2025-10-31 19:44:32 [restartedMain] DEBUG com.petsalud.VeterinariaApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-10-31 19:44:32 [restartedMain] INFO  com.petsalud.VeterinariaApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-31 19:44:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-31 19:44:32 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 29 ms. Found 13 JPA repository interfaces.
2025-10-31 19:44:32 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:44:32 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:44:32 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-10-31 19:44:32 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-31 19:44:32 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-31 19:44:32 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-10-31 19:44:32 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-31 19:44:32 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 425 ms
2025-10-31 19:44:32 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Starting...
2025-10-31 19:44:32 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-3 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6b7d75d0
2025-10-31 19:44:32 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Start completed.
2025-10-31 19:44:32 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3308/veterinaria_petsalud?useSSL=false&serverTimezone=America/Lima&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true'
2025-10-31 19:44:33 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-31 19:44:33 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-31 19:44:33 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-31 19:44:33 [restartedMain] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-10-31 19:44:33 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-31 19:44:33 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-31 19:44:33 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-31 19:44:34 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectMapper' defined in class path resource [com/petsalud/config/JacksonConfig.class]: Failed to instantiate [com.fasterxml.jackson.databind.ObjectMapper]: Factory method 'objectMapper' threw exception with message: Unresolved compilation problem: 
	Hibernate5JakartaModule cannot be resolved to a type

2025-10-31 19:44:34 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-31 19:44:34 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown initiated...
2025-10-31 19:44:34 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-3 - Shutdown completed.
2025-10-31 19:44:34 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-10-31 19:44:34 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-10-31 19:44:34 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectMapper' defined in class path resource [com/petsalud/config/JacksonConfig.class]: Failed to instantiate [com.fasterxml.jackson.databind.ObjectMapper]: Factory method 'objectMapper' threw exception with message: Unresolved compilation problem: 
	Hibernate5JakartaModule cannot be resolved to a type

	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:489) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960) ~[spring-context-6.1.2.jar:6.1.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) ~[spring-context-6.1.2.jar:6.1.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.2.1.jar:3.2.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762) ~[spring-boot-3.2.1.jar:3.2.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464) ~[spring-boot-3.2.1.jar:3.2.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334) ~[spring-boot-3.2.1.jar:3.2.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358) ~[spring-boot-3.2.1.jar:3.2.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347) ~[spring-boot-3.2.1.jar:3.2.1]
	at com.petsalud.VeterinariaApplication.main(VeterinariaApplication.java:47) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:565) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50) ~[spring-boot-devtools-3.2.1.jar:3.2.1]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.fasterxml.jackson.databind.ObjectMapper]: Factory method 'objectMapper' threw exception with message: Unresolved compilation problem: 
	Hibernate5JakartaModule cannot be resolved to a type

	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-6.1.2.jar:6.1.2]
	... 22 common frames omitted
Caused by: java.lang.Error: Unresolved compilation problem: 
	Hibernate5JakartaModule cannot be resolved to a type

	at com.petsalud.config.JacksonConfig.objectMapper(JacksonConfig.java:16) ~[classes/:na]
	at com.petsalud.config.JacksonConfig$$SpringCGLIB$$0.CGLIB$objectMapper$0(<generated>) ~[classes/:na]
	at com.petsalud.config.JacksonConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258) ~[spring-core-6.1.2.jar:6.1.2]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-6.1.2.jar:6.1.2]
	at com.petsalud.config.JacksonConfig$$SpringCGLIB$$0.objectMapper(<generated>) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:565) ~[na:na]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140) ~[spring-beans-6.1.2.jar:6.1.2]
	... 23 common frames omitted
2025-10-31 19:46:05 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Starting VeterinariaApplication using Java 25 with PID 45040 (C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria\target\classes started by Rodrigo Aniceto in C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria)
2025-10-31 19:46:05 [restartedMain] DEBUG com.petsalud.VeterinariaApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-10-31 19:46:05 [restartedMain] INFO  com.petsalud.VeterinariaApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-31 19:46:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-31 19:46:05 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 70 ms. Found 13 JPA repository interfaces.
2025-10-31 19:46:05 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:46:05 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:46:05 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-10-31 19:46:05 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-31 19:46:05 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-31 19:46:05 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-10-31 19:46:05 [restartedMain] INFO  o.a.c.c.C.[Tomcat-1].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-31 19:46:05 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 565 ms
2025-10-31 19:46:05 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Starting...
2025-10-31 19:46:05 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-4 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3fdf4b90
2025-10-31 19:46:05 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Start completed.
2025-10-31 19:46:05 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3308/veterinaria_petsalud?useSSL=false&serverTimezone=America/Lima&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true'
2025-10-31 19:46:05 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-31 19:46:05 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-31 19:46:05 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-31 19:46:05 [restartedMain] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-10-31 19:46:05 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-31 19:46:05 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-31 19:46:06 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-31 19:46:06 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectMapper' defined in class path resource [com/petsalud/config/JacksonConfig.class]: Failed to instantiate [com.fasterxml.jackson.databind.ObjectMapper]: Factory method 'objectMapper' threw exception with message: com/fasterxml/jackson/datatype/hibernate5/jakarta/Hibernate5JakartaModule
2025-10-31 19:46:06 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-31 19:46:06 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown initiated...
2025-10-31 19:46:06 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-4 - Shutdown completed.
2025-10-31 19:46:06 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-10-31 19:46:06 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-10-31 19:46:06 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectMapper' defined in class path resource [com/petsalud/config/JacksonConfig.class]: Failed to instantiate [com.fasterxml.jackson.databind.ObjectMapper]: Factory method 'objectMapper' threw exception with message: com/fasterxml/jackson/datatype/hibernate5/jakarta/Hibernate5JakartaModule
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:489) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960) ~[spring-context-6.1.2.jar:6.1.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) ~[spring-context-6.1.2.jar:6.1.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.2.1.jar:3.2.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762) ~[spring-boot-3.2.1.jar:3.2.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464) ~[spring-boot-3.2.1.jar:3.2.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334) ~[spring-boot-3.2.1.jar:3.2.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358) ~[spring-boot-3.2.1.jar:3.2.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347) ~[spring-boot-3.2.1.jar:3.2.1]
	at com.petsalud.VeterinariaApplication.main(VeterinariaApplication.java:47) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:565) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50) ~[spring-boot-devtools-3.2.1.jar:3.2.1]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.fasterxml.jackson.databind.ObjectMapper]: Factory method 'objectMapper' threw exception with message: com/fasterxml/jackson/datatype/hibernate5/jakarta/Hibernate5JakartaModule
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-6.1.2.jar:6.1.2]
	... 22 common frames omitted
Caused by: java.lang.NoClassDefFoundError: com/fasterxml/jackson/datatype/hibernate5/jakarta/Hibernate5JakartaModule
	at com.petsalud.config.JacksonConfig.objectMapper(JacksonConfig.java:16) ~[classes/:na]
	at com.petsalud.config.JacksonConfig$$SpringCGLIB$$0.CGLIB$objectMapper$0(<generated>) ~[classes/:na]
	at com.petsalud.config.JacksonConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258) ~[spring-core-6.1.2.jar:6.1.2]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-6.1.2.jar:6.1.2]
	at com.petsalud.config.JacksonConfig$$SpringCGLIB$$0.objectMapper(<generated>) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:565) ~[na:na]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140) ~[spring-beans-6.1.2.jar:6.1.2]
	... 23 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.datatype.hibernate5.jakarta.Hibernate5JakartaModule
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:580) ~[na:na]
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:490) ~[na:na]
	at java.base/java.lang.Class.forName0(Native Method) ~[na:na]
	at java.base/java.lang.Class.forName(Class.java:547) ~[na:na]
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:121) ~[spring-boot-devtools-3.2.1.jar:3.2.1]
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:490) ~[na:na]
	... 32 common frames omitted
2025-10-31 19:46:10 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Starting VeterinariaApplication using Java 25 with PID 45040 (C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria\target\classes started by Rodrigo Aniceto in C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria)
2025-10-31 19:46:10 [restartedMain] DEBUG com.petsalud.VeterinariaApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-10-31 19:46:10 [restartedMain] INFO  com.petsalud.VeterinariaApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-31 19:46:10 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-31 19:46:10 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 25 ms. Found 13 JPA repository interfaces.
2025-10-31 19:46:10 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:46:10 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:46:10 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-10-31 19:46:10 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-31 19:46:10 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-31 19:46:10 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-10-31 19:46:10 [restartedMain] INFO  o.a.c.c.C.[Tomcat-2].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-31 19:46:10 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 404 ms
2025-10-31 19:46:10 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Starting...
2025-10-31 19:46:10 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-5 - Added connection com.mysql.cj.jdbc.ConnectionImpl@71422815
2025-10-31 19:46:10 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Start completed.
2025-10-31 19:46:10 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3308/veterinaria_petsalud?useSSL=false&serverTimezone=America/Lima&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true'
2025-10-31 19:46:10 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-31 19:46:10 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-31 19:46:10 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-31 19:46:10 [restartedMain] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-10-31 19:46:10 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-31 19:46:11 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-31 19:46:11 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-31 19:46:11 [restartedMain] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectMapper' defined in class path resource [com/petsalud/config/JacksonConfig.class]: Failed to instantiate [com.fasterxml.jackson.databind.ObjectMapper]: Factory method 'objectMapper' threw exception with message: com/fasterxml/jackson/datatype/hibernate5/jakarta/Hibernate5JakartaModule
2025-10-31 19:46:11 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-31 19:46:11 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown initiated...
2025-10-31 19:46:11 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-5 - Shutdown completed.
2025-10-31 19:46:11 [restartedMain] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-10-31 19:46:11 [restartedMain] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-10-31 19:46:11 [restartedMain] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'objectMapper' defined in class path resource [com/petsalud/config/JacksonConfig.class]: Failed to instantiate [com.fasterxml.jackson.databind.ObjectMapper]: Factory method 'objectMapper' threw exception with message: com/fasterxml/jackson/datatype/hibernate5/jakarta/Hibernate5JakartaModule
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:655) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:489) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1334) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1164) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:561) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:521) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:960) ~[spring-context-6.1.2.jar:6.1.2]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625) ~[spring-context-6.1.2.jar:6.1.2]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146) ~[spring-boot-3.2.1.jar:3.2.1]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762) ~[spring-boot-3.2.1.jar:3.2.1]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:464) ~[spring-boot-3.2.1.jar:3.2.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334) ~[spring-boot-3.2.1.jar:3.2.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1358) ~[spring-boot-3.2.1.jar:3.2.1]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1347) ~[spring-boot-3.2.1.jar:3.2.1]
	at com.petsalud.VeterinariaApplication.main(VeterinariaApplication.java:47) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:565) ~[na:na]
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50) ~[spring-boot-devtools-3.2.1.jar:3.2.1]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.fasterxml.jackson.databind.ObjectMapper]: Factory method 'objectMapper' threw exception with message: com/fasterxml/jackson/datatype/hibernate5/jakarta/Hibernate5JakartaModule
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177) ~[spring-beans-6.1.2.jar:6.1.2]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651) ~[spring-beans-6.1.2.jar:6.1.2]
	... 22 common frames omitted
Caused by: java.lang.NoClassDefFoundError: com/fasterxml/jackson/datatype/hibernate5/jakarta/Hibernate5JakartaModule
	at com.petsalud.config.JacksonConfig.objectMapper(JacksonConfig.java:16) ~[classes/:na]
	at com.petsalud.config.JacksonConfig$$SpringCGLIB$$0.CGLIB$objectMapper$0(<generated>) ~[classes/:na]
	at com.petsalud.config.JacksonConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258) ~[spring-core-6.1.2.jar:6.1.2]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331) ~[spring-context-6.1.2.jar:6.1.2]
	at com.petsalud.config.JacksonConfig$$SpringCGLIB$$0.objectMapper(<generated>) ~[classes/:na]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:565) ~[na:na]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140) ~[spring-beans-6.1.2.jar:6.1.2]
	... 23 common frames omitted
Caused by: java.lang.ClassNotFoundException: com.fasterxml.jackson.datatype.hibernate5.jakarta.Hibernate5JakartaModule
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:580) ~[na:na]
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:490) ~[na:na]
	at java.base/java.lang.Class.forName0(Native Method) ~[na:na]
	at java.base/java.lang.Class.forName(Class.java:547) ~[na:na]
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:121) ~[spring-boot-devtools-3.2.1.jar:3.2.1]
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:490) ~[na:na]
	... 32 common frames omitted
2025-10-31 19:46:56 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Starting VeterinariaApplication using Java 25 with PID 19340 (C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria\target\classes started by Rodrigo Aniceto in C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria)
2025-10-31 19:46:56 [restartedMain] DEBUG com.petsalud.VeterinariaApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-10-31 19:46:56 [restartedMain] INFO  com.petsalud.VeterinariaApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-31 19:46:56 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-31 19:46:56 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-31 19:46:57 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-31 19:46:57 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 76 ms. Found 13 JPA repository interfaces.
2025-10-31 19:46:58 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:46:58 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:46:58 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-10-31 19:46:58 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-31 19:46:58 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-31 19:46:58 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-10-31 19:46:58 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-31 19:46:58 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1644 ms
2025-10-31 19:46:58 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-31 19:46:58 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@61525be
2025-10-31 19:46:58 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-31 19:46:58 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3308/veterinaria_petsalud?useSSL=false&serverTimezone=America/Lima&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true'
2025-10-31 19:46:58 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-31 19:46:58 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-10-31 19:46:59 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-31 19:46:59 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-31 19:46:59 [restartedMain] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-10-31 19:46:59 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-31 19:47:00 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-31 19:47:00 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-31 19:47:00 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-31 19:47:02 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-31 19:47:02 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-10-31 19:47:02 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@239c2b2e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2653706d, org.springframework.security.web.context.SecurityContextHolderFilter@511aaede, org.springframework.security.web.header.HeaderWriterFilter@889fc33, org.springframework.web.filter.CorsFilter@34ed332f, org.springframework.security.web.authentication.logout.LogoutFilter@494b19f0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2bb635f7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c9d40c5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@354d600a, org.springframework.security.web.session.SessionManagementFilter@28cbf366, org.springframework.security.web.access.ExceptionTranslationFilter@587de9e8, org.springframework.security.web.access.intercept.AuthorizationFilter@735bb24f]
2025-10-31 19:47:03 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-31 19:47:03 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-10-31 19:47:03 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Started VeterinariaApplication in 7.007 seconds (process running for 7.401)
2025-10-31 19:47:12 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-31 19:47:12 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-31 19:47:12 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-31 19:47:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:47:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:47:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:47:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:47:12 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:47:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:47:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:47:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:22 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-31 19:47:22 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        v1_0.id_veterinario,
        v1_0.activo,
        v1_0.apellidos,
        v1_0.colegiatura,
        v1_0.email,
        v1_0.especialidad,
        v1_0.nombres,
        v1_0.telefono 
    from
        veterinarios v1_0
2025-10-31 19:47:22 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:47:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:47:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:25 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:47:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:47:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:47:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:47:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:47:32 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        v1_0.id_veterinario,
        v1_0.activo,
        v1_0.apellidos,
        v1_0.colegiatura,
        v1_0.email,
        v1_0.especialidad,
        v1_0.nombres,
        v1_0.telefono 
    from
        veterinarios v1_0
2025-10-31 19:47:32 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-31 19:48:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:48:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:48:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:48:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:48:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:48:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:48:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:31 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:48:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:48:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:48:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:48:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:48:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:48:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:48:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:48:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:48:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:48:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:48:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:48:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:32 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:32 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:48:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:48:32 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:48:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:48:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:48:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:48:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:48:32 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:48:32 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:33 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:45 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:47 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:50 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:48:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:48:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:48:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:48:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:48:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:48:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:48:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:48:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:48:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:48:54 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:48:54 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        v1_0.id_veterinario,
        v1_0.activo,
        v1_0.apellidos,
        v1_0.colegiatura,
        v1_0.email,
        v1_0.especialidad,
        v1_0.nombres,
        v1_0.telefono 
    from
        veterinarios v1_0
2025-10-31 19:48:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-31 19:48:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:48:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:48:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:48:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:48:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:48:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:48:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:48:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:48:57 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:48:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:48:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:48:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:49:03 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:49:03 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-31 19:49:03 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        v1_0.id_veterinario,
        v1_0.activo,
        v1_0.apellidos,
        v1_0.colegiatura,
        v1_0.email,
        v1_0.especialidad,
        v1_0.nombres,
        v1_0.telefono 
    from
        veterinarios v1_0
2025-10-31 19:49:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:49:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:49:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:49:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_toma=?
2025-10-31 19:49:10 [http-nio-8080-exec-4] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: La toma de muestra debe tener un técnico asignado] with root cause
java.lang.RuntimeException: La toma de muestra debe tener un técnico asignado
	at com.petsalud.service.TomaMuestraService.guardar(TomaMuestraService.java:106)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.petsalud.service.TomaMuestraService$$SpringCGLIB$$0.guardar(<generated>)
	at com.petsalud.controller.TomaMuestraController.actualizar(TomaMuestraController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-31 19:49:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_toma=?
2025-10-31 19:49:14 [http-nio-8080-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: La toma de muestra debe tener un técnico asignado] with root cause
java.lang.RuntimeException: La toma de muestra debe tener un técnico asignado
	at com.petsalud.service.TomaMuestraService.guardar(TomaMuestraService.java:106)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.petsalud.service.TomaMuestraService$$SpringCGLIB$$0.guardar(<generated>)
	at com.petsalud.controller.TomaMuestraController.actualizar(TomaMuestraController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-31 19:49:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0
2025-10-31 19:49:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:49:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:49:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:49:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:49:25 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:49:30 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_toma=?
2025-10-31 19:49:30 [http-nio-8080-exec-6] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: La toma de muestra debe tener un técnico asignado] with root cause
java.lang.RuntimeException: La toma de muestra debe tener un técnico asignado
	at com.petsalud.service.TomaMuestraService.guardar(TomaMuestraService.java:106)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.petsalud.service.TomaMuestraService$$SpringCGLIB$$0.guardar(<generated>)
	at com.petsalud.controller.TomaMuestraController.actualizar(TomaMuestraController.java:115)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPut(FrameworkServlet.java:925)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:593)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-31 19:50:11 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:50:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:50:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:50:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:50:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:50:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:50:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:50:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:50:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:50:12 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:50:20 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        v1_0.id_veterinario,
        v1_0.activo,
        v1_0.apellidos,
        v1_0.colegiatura,
        v1_0.email,
        v1_0.especialidad,
        v1_0.nombres,
        v1_0.telefono 
    from
        veterinarios v1_0
2025-10-31 19:50:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-31 19:50:51 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* insert for
        com.petsalud.model.OrdenVeterinaria */insert 
    into
        ordenes_veterinarias (diagnostico_presuntivo, estado, fecha_orden, id_mascota, observaciones, prioridad, sintomas, tipo_examen, id_veterinario) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-10-31 19:50:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:50:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:50:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:50:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:50:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:50:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:50:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:50:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:50:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:50:51 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:58:34 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Starting VeterinariaApplication using Java 25 with PID 4024 (C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria\target\classes started by Rodrigo Aniceto in C:\Users\Rodrigo Aniceto\Pictures\Veterinaria-PetSalud\backend-veterinaria)
2025-10-31 19:58:34 [restartedMain] DEBUG com.petsalud.VeterinariaApplication - Running with Spring Boot v3.2.1, Spring v6.1.2
2025-10-31 19:58:34 [restartedMain] INFO  com.petsalud.VeterinariaApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-31 19:58:34 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-10-31 19:58:34 [restartedMain] INFO  o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-10-31 19:58:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-31 19:58:35 [restartedMain] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 84 ms. Found 13 JPA repository interfaces.
2025-10-31 19:58:36 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:58:36 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - Code archive: C:\Users\Rodrigo Aniceto\.m2\repository\org\springframework\boot\spring-boot\3.2.1\spring-boot-3.2.1.jar
2025-10-31 19:58:36 [restartedMain] DEBUG c.petsalud.VeterinariaApplication$2 - None of the document roots [src/main/webapp, public, static] point to a directory and will be ignored.
2025-10-31 19:58:36 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-31 19:58:36 [restartedMain] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-10-31 19:58:36 [restartedMain] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.17]
2025-10-31 19:58:36 [restartedMain] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-31 19:58:36 [restartedMain] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1774 ms
2025-10-31 19:58:36 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-31 19:58:36 [restartedMain] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@14f67052
2025-10-31 19:58:36 [restartedMain] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-31 19:58:36 [restartedMain] INFO  o.s.b.a.h.H2ConsoleAutoConfiguration - H2 console available at '/h2-console'. Database available at 'jdbc:mysql://localhost:3308/veterinaria_petsalud?useSSL=false&serverTimezone=America/Lima&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true'
2025-10-31 19:58:36 [restartedMain] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-31 19:58:36 [restartedMain] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.1.Final
2025-10-31 19:58:36 [restartedMain] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-31 19:58:37 [restartedMain] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-31 19:58:37 [restartedMain] WARN  org.hibernate.dialect.Dialect - HHH000511: The 5.5.0 version for [org.hibernate.dialect.MySQLDialect] is no longer supported, hence certain features may not work properly. The minimum supported version is 8.0.0. Check the community dialects project for available legacy versions.
2025-10-31 19:58:37 [restartedMain] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-31 19:58:38 [restartedMain] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-31 19:58:38 [restartedMain] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-31 19:58:38 [restartedMain] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-31 19:58:40 [restartedMain] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-10-31 19:58:40 [restartedMain] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 3 endpoint(s) beneath base path '/actuator'
2025-10-31 19:58:40 [restartedMain] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2214cfb4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6e154ec4, org.springframework.security.web.context.SecurityContextHolderFilter@78951e86, org.springframework.security.web.header.HeaderWriterFilter@22ce1e5a, org.springframework.web.filter.CorsFilter@28e67122, org.springframework.security.web.authentication.logout.LogoutFilter@70af61e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@95f8fa8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18cf9f74, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1eca630e, org.springframework.security.web.session.SessionManagementFilter@34fae95d, org.springframework.security.web.access.ExceptionTranslationFilter@54ee0b62, org.springframework.security.web.access.intercept.AuthorizationFilter@306ca498]
2025-10-31 19:58:41 [restartedMain] INFO  o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-10-31 19:58:41 [restartedMain] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
2025-10-31 19:58:41 [restartedMain] INFO  com.petsalud.VeterinariaApplication - Started VeterinariaApplication in 7.538 seconds (process running for 7.976)
2025-10-31 19:59:30 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-31 19:59:30 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-31 19:59:30 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        ResultadoVeterinario x */ select
            count(*) 
        from
            resultados_veterinarios rv1_0
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.validado
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        not(rv1_0.validado)
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        Mascota x */ select
            count(*) 
        from
            mascotas m1_0
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(v1_0.id_veterinario) 
    from
        veterinarios v1_0 
    where
        v1_0.activo
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(tv1_0.id_tecnico) 
    from
        tecnicos_veterinarios tv1_0 
    where
        tv1_0.activo
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        f1_0.id_factura,
        f1_0.id_dueno,
        f1_0.estado,
        f1_0.fecha_emision,
        f1_0.fecha_pago,
        f1_0.fecha_vencimiento,
        f1_0.igv,
        f1_0.metodo_pago,
        f1_0.numero_factura,
        f1_0.observaciones,
        f1_0.subtotal,
        f1_0.total 
    from
        facturas f1_0 
    where
        f1_0.fecha_emision between ? and ?
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    where
        ov1_0.fecha_orden between ? and ?
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.fecha_resultado between ? and ?
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(ov1_0.id_orden) 
    from
        ordenes_veterinarias ov1_0 
    where
        upper(ov1_0.estado)=upper(?)
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(rv1_0.id_resultado) 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.entregado
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        count(f1_0.id_factura) 
    from
        facturas f1_0 
    where
        upper(f1_0.estado)=upper(?)
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:59:30 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* select
        count(*) 
    from
        OrdenVeterinaria x */ select
            count(*) 
        from
            ordenes_veterinarias ov1_0
2025-10-31 19:59:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 19:59:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:59:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:59:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:59:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:59:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:59:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:59:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:59:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 19:59:45 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:00:16 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        v1_0.id_veterinario,
        v1_0.activo,
        v1_0.apellidos,
        v1_0.colegiatura,
        v1_0.email,
        v1_0.especialidad,
        v1_0.nombres,
        v1_0.telefono 
    from
        veterinarios v1_0
2025-10-31 20:00:16 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-31 20:00:16 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 20:00:22 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0
2025-10-31 20:00:22 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 20:00:22 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        v1_0.id_veterinario,
        v1_0.activo,
        v1_0.apellidos,
        v1_0.colegiatura,
        v1_0.email,
        v1_0.especialidad,
        v1_0.nombres,
        v1_0.telefono 
    from
        veterinarios v1_0
2025-10-31 20:00:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 20:00:28 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id_orden,
        r1_0.id_resultado,
        r1_0.conclusiones,
        r1_0.descripcion,
        r1_0.entregado,
        r1_0.fecha_entrega,
        r1_0.fecha_resultado,
        r1_0.fecha_validacion,
        r1_0.metodo_analisis,
        r1_0.observaciones_tecnicas,
        r1_0.recomendaciones,
        r1_0.validado,
        r1_0.valores,
        r1_0.valores_referencia 
    from
        resultados_veterinarios r1_0 
    where
        r1_0.id_orden=?
2025-10-31 20:00:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 20:00:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:00:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:00:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:00:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:00:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:00:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:00:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:00:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:00:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:00:46 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=rv1_0.id_orden 
    where
        o1_0.id_orden=?
2025-10-31 20:00:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.id_resultado=?
2025-10-31 20:00:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 20:00:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        v1_0.id_veterinario,
        v1_0.activo,
        v1_0.apellidos,
        v1_0.colegiatura,
        v1_0.email,
        v1_0.especialidad,
        v1_0.nombres,
        v1_0.telefono 
    from
        veterinarios v1_0 
    where
        v1_0.id_veterinario=?
2025-10-31 20:00:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_mascota=?
2025-10-31 20:00:51 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0 
    where
        d1_0.id_dueno=?
2025-10-31 20:00:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.id_resultado=?
2025-10-31 20:00:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        tm1_0.id_toma,
        tm1_0.codigo_muestra,
        tm1_0.condiciones_muestra,
        tm1_0.estado,
        tm1_0.fecha_hora,
        tm1_0.metodo_obtencion,
        tm1_0.observaciones,
        tm1_0.id_orden,
        tm1_0.id_tecnico,
        tm1_0.tipo_muestra,
        tm1_0.volumen_muestra,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0 
    left join
        toma_muestras_vet tm1_0 
            on ov1_0.id_orden=tm1_0.id_orden 
    where
        ov1_0.id_orden=?
2025-10-31 20:00:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        v1_0.id_veterinario,
        v1_0.activo,
        v1_0.apellidos,
        v1_0.colegiatura,
        v1_0.email,
        v1_0.especialidad,
        v1_0.nombres,
        v1_0.telefono 
    from
        veterinarios v1_0 
    where
        v1_0.id_veterinario=?
2025-10-31 20:00:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        m1_0.id_mascota,
        m1_0.color,
        m1_0.id_dueno,
        m1_0.edad,
        m1_0.especie,
        m1_0.nombre,
        m1_0.observaciones,
        m1_0.peso,
        m1_0.raza,
        m1_0.sexo 
    from
        mascotas m1_0 
    where
        m1_0.id_mascota=?
2025-10-31 20:00:51 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        d1_0.id_dueno,
        d1_0.apellidos,
        d1_0.direccion,
        d1_0.dni,
        d1_0.email,
        d1_0.nombres,
        d1_0.telefono 
    from
        duenos d1_0 
    where
        d1_0.id_dueno=?
2025-10-31 20:02:08 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.id_resultado=?
2025-10-31 20:02:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        ov1_0.id_orden,
        ov1_0.diagnostico_presuntivo,
        ov1_0.estado,
        ov1_0.fecha_orden,
        ov1_0.id_mascota,
        ov1_0.observaciones,
        ov1_0.prioridad,
        ov1_0.sintomas,
        ov1_0.tipo_examen,
        ov1_0.id_veterinario 
    from
        ordenes_veterinarias ov1_0
2025-10-31 20:02:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:02:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:02:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:02:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:02:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:02:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:02:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:02:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:02:08 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        tmv1_0.id_toma,
        tmv1_0.codigo_muestra,
        tmv1_0.condiciones_muestra,
        tmv1_0.estado,
        tmv1_0.fecha_hora,
        tmv1_0.metodo_obtencion,
        tmv1_0.observaciones,
        tmv1_0.id_orden,
        o1_0.id_orden,
        o1_0.diagnostico_presuntivo,
        o1_0.estado,
        o1_0.fecha_orden,
        o1_0.id_mascota,
        o1_0.observaciones,
        o1_0.prioridad,
        o1_0.sintomas,
        o1_0.tipo_examen,
        o1_0.id_veterinario,
        tmv1_0.id_tecnico,
        tmv1_0.tipo_muestra,
        tmv1_0.volumen_muestra 
    from
        toma_muestras_vet tmv1_0 
    join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=tmv1_0.id_orden 
    where
        tmv1_0.id_orden=?
2025-10-31 20:02:18 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    where
        rv1_0.id_resultado=?
2025-10-31 20:02:18 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: El resultado ya ha sido validado] with root cause
java.lang.RuntimeException: El resultado ya ha sido validado
	at com.petsalud.service.ResultadoService.validarResultado(ResultadoService.java:126)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:352)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at com.petsalud.service.ResultadoService$$SpringCGLIB$$0.validarResultado(<generated>)
	at com.petsalud.controller.ResultadoController.validarResultado(ResultadoController.java:121)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:262)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:190)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:917)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:829)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:888)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:225)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:340)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:1474)
2025-10-31 20:02:20 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    /* <criteria> */ select
        rv1_0.id_resultado,
        rv1_0.conclusiones,
        rv1_0.descripcion,
        rv1_0.entregado,
        rv1_0.fecha_entrega,
        rv1_0.fecha_resultado,
        rv1_0.fecha_validacion,
        rv1_0.metodo_analisis,
        rv1_0.observaciones_tecnicas,
        rv1_0.id_orden,
        rv1_0.recomendaciones,
        rv1_0.validado,
        rv1_0.valores,
        rv1_0.valores_referencia 
    from
        resultados_veterinarios rv1_0 
    left join
        ordenes_veterinarias o1_0 
            on o1_0.id_orden=rv1_0.id_orden 
    where
        o1_0.id_orden=?
