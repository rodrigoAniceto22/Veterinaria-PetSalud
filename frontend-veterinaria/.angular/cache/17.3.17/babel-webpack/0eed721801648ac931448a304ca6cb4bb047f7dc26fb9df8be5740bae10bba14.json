{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    http;\n    apiUrl = 'http://localhost:8080/api/usuarios';\n    usuarioActualSubject = new BehaviorSubject(null);\n    usuarioActual$ = this.usuarioActualSubject.asObservable();\n    constructor(http) {\n      this.http = http;\n      this.cargarUsuarioDesdeStorage();\n    }\n    login(credentials) {\n      return this.http.post(`${this.apiUrl}/login`, credentials).pipe(tap(response => {\n        if (response.success) {\n          this.guardarUsuario(response.usuario);\n        }\n      }));\n    }\n    logout() {\n      localStorage.removeItem('usuario');\n      localStorage.removeItem('token');\n      this.usuarioActualSubject.next(null);\n    }\n    isLoggedIn() {\n      return !!localStorage.getItem('usuario');\n    }\n    getUsuarioActual() {\n      return this.usuarioActualSubject.value;\n    }\n    getRolUsuario() {\n      const usuario = this.getUsuarioActual();\n      return usuario ? usuario.rol : '';\n    }\n    tieneRol(roles) {\n      const rolActual = this.getRolUsuario();\n      return roles.includes(rolActual);\n    }\n    cambiarPassword(idUsuario, passwords) {\n      return this.http.post(`${this.apiUrl}/${idUsuario}/cambiar-password`, passwords);\n    }\n    verificarUsername(username) {\n      return this.http.get(`${this.apiUrl}/verificar-username/${username}`);\n    }\n    guardarUsuario(usuario) {\n      localStorage.setItem('usuario', JSON.stringify(usuario));\n      this.usuarioActualSubject.next(usuario);\n    }\n    cargarUsuarioDesdeStorage() {\n      const usuarioStr = localStorage.getItem('usuario');\n      if (usuarioStr) {\n        const usuario = JSON.parse(usuarioStr);\n        this.usuarioActualSubject.next(usuario);\n      }\n    }\n    static ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}