{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/cita.service\";\nimport * as i2 from \"../../services/mascota.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction CitaFormComponent_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const mascota_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", mascota_r1.idMascota);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate4(\" \", mascota_r1.nombre, \" - \", mascota_r1.especie, \" (Due\\u00F1o: \", mascota_r1.dueno == null ? null : mascota_r1.dueno.nombres, \" \", mascota_r1.dueno == null ? null : mascota_r1.dueno.apellidos, \") \");\n  }\n}\nfunction CitaFormComponent_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const duracion_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", duracion_r2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", duracion_r2, \" minutos \");\n  }\n}\nfunction CitaFormComponent_option_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tipo_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", tipo_r3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(tipo_r3);\n  }\n}\nfunction CitaFormComponent_option_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const estado_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", estado_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(estado_r4);\n  }\n}\nexport let CitaFormComponent = /*#__PURE__*/(() => {\n  class CitaFormComponent {\n    citaService;\n    mascotaService;\n    router;\n    route;\n    cita = {\n      mascota: {\n        idMascota: 0\n      },\n      fechaHora: new Date(),\n      motivo: '',\n      estado: 'PROGRAMADA',\n      duracionMinutos: 30\n    };\n    mascotas = [];\n    esEdicion = false;\n    enviando = false;\n    tiposCita = ['CONSULTA', 'VACUNACION', 'CIRUGIA', 'CONTROL', 'EMERGENCIA', 'OTRO'];\n    estados = ['PROGRAMADA', 'CONFIRMADA', 'COMPLETADA', 'CANCELADA', 'NO_ASISTIO'];\n    duraciones = [15, 30, 45, 60, 90, 120];\n    constructor(citaService, mascotaService, router, route) {\n      this.citaService = citaService;\n      this.mascotaService = mascotaService;\n      this.router = router;\n      this.route = route;\n    }\n    ngOnInit() {\n      this.cargarMascotas();\n      const id = this.route.snapshot.params['id'];\n      if (id) {\n        this.esEdicion = true;\n        this.cargarCita(id);\n      }\n    }\n    cargarMascotas() {\n      this.mascotaService.listarTodas().subscribe({\n        next: data => {\n          this.mascotas = data;\n        },\n        error: error => {\n          console.error('Error al cargar mascotas:', error);\n        }\n      });\n    }\n    cargarCita(id) {\n      this.citaService.obtenerPorId(id).subscribe({\n        next: data => {\n          this.cita = data;\n        },\n        error: error => {\n          console.error('Error al cargar cita:', error);\n          alert('Error al cargar la cita');\n          this.volver();\n        }\n      });\n    }\n    guardar() {\n      if (!this.validar()) {\n        return;\n      }\n      this.enviando = true;\n      if (this.esEdicion) {\n        this.citaService.actualizar(this.cita.idCita, this.cita).subscribe({\n          next: () => {\n            alert('Cita actualizada exitosamente');\n            this.volver();\n          },\n          error: error => {\n            console.error('Error al actualizar:', error);\n            alert('Error al actualizar la cita');\n            this.enviando = false;\n          }\n        });\n      } else {\n        this.citaService.crear(this.cita).subscribe({\n          next: () => {\n            alert('Cita creada exitosamente');\n            this.volver();\n          },\n          error: error => {\n            console.error('Error al crear:', error);\n            alert('Error al crear la cita');\n            this.enviando = false;\n          }\n        });\n      }\n    }\n    validar() {\n      if (!this.cita.mascota.idMascota || this.cita.mascota.idMascota === 0) {\n        alert('Debe seleccionar una mascota');\n        return false;\n      }\n      if (!this.cita.motivo || this.cita.motivo.trim() === '') {\n        alert('El motivo es obligatorio');\n        return false;\n      }\n      if (!this.cita.fechaHora) {\n        alert('La fecha y hora son obligatorias');\n        return false;\n      }\n      return true;\n    }\n    volver() {\n      this.router.navigate(['/citas']);\n    }\n    static ɵfac = function CitaFormComponent_Factory(t) {\n      return new (t || CitaFormComponent)(i0.ɵɵdirectiveInject(i1.CitaService), i0.ɵɵdirectiveInject(i2.MascotaService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CitaFormComponent,\n      selectors: [[\"app-cita-form\"]],\n      decls: 59,\n      vars: 17,\n      consts: [[1, \"container\", \"mt-4\"], [1, \"row\"], [1, \"col-md-8\", \"offset-md-2\"], [1, \"card\"], [1, \"card-header\"], [1, \"fas\", \"fa-calendar-plus\"], [1, \"card-body\"], [3, \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"name\", \"idMascota\", \"required\", \"\", 1, \"form-select\", 3, \"ngModelChange\", \"ngModel\"], [3, \"value\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-6\", \"mb-3\"], [\"type\", \"datetime-local\", \"name\", \"fechaHora\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"duracionMinutos\", 1, \"form-select\", 3, \"ngModelChange\", \"ngModel\"], [\"name\", \"tipoCita\", 1, \"form-select\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"\"], [\"name\", \"estado\", 1, \"form-select\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"text\", \"name\", \"motivo\", \"placeholder\", \"Ej: Vacunaci\\u00F3n, Control, Consulta general...\", \"required\", \"\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"name\", \"costoConsulta\", \"step\", \"0.01\", \"min\", \"0\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"rows\", \"3\", \"name\", \"observaciones\", \"placeholder\", \"Informaci\\u00F3n adicional sobre la cita...\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [1, \"d-grid\", \"gap-2\", \"d-md-flex\", \"justify-content-md-end\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\", \"disabled\"], [1, \"fas\", \"fa-times\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"fas\", \"fa-save\"]],\n      template: function CitaFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\");\n          i0.ɵɵelement(6, \"i\", 5);\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 6)(9, \"form\", 7);\n          i0.ɵɵlistener(\"ngSubmit\", function CitaFormComponent_Template_form_ngSubmit_9_listener() {\n            return ctx.guardar();\n          });\n          i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 9);\n          i0.ɵɵtext(12, \"Mascota *\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"select\", 10);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CitaFormComponent_Template_select_ngModelChange_13_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.cita.mascota.idMascota, $event) || (ctx.cita.mascota.idMascota = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(14, \"option\", 11);\n          i0.ɵɵtext(15, \"Seleccione una mascota...\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(16, CitaFormComponent_option_16_Template, 2, 5, \"option\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"div\", 1)(18, \"div\", 13)(19, \"label\", 9);\n          i0.ɵɵtext(20, \"Fecha y Hora *\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"input\", 14);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CitaFormComponent_Template_input_ngModelChange_21_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.cita.fechaHora, $event) || (ctx.cita.fechaHora = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(22, \"div\", 13)(23, \"label\", 9);\n          i0.ɵɵtext(24, \"Duraci\\u00F3n (minutos)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"select\", 15);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CitaFormComponent_Template_select_ngModelChange_25_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.cita.duracionMinutos, $event) || (ctx.cita.duracionMinutos = $event);\n            return $event;\n          });\n          i0.ɵɵtemplate(26, CitaFormComponent_option_26_Template, 2, 2, \"option\", 12);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(27, \"div\", 1)(28, \"div\", 13)(29, \"label\", 9);\n          i0.ɵɵtext(30, \"Tipo de Cita\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(31, \"select\", 16);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CitaFormComponent_Template_select_ngModelChange_31_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.cita.tipoCita, $event) || (ctx.cita.tipoCita = $event);\n            return $event;\n          });\n          i0.ɵɵelementStart(32, \"option\", 17);\n          i0.ɵɵtext(33, \"Seleccione...\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(34, CitaFormComponent_option_34_Template, 2, 2, \"option\", 12);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(35, \"div\", 13)(36, \"label\", 9);\n          i0.ɵɵtext(37, \"Estado\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(38, \"select\", 18);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CitaFormComponent_Template_select_ngModelChange_38_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.cita.estado, $event) || (ctx.cita.estado = $event);\n            return $event;\n          });\n          i0.ɵɵtemplate(39, CitaFormComponent_option_39_Template, 2, 2, \"option\", 12);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(40, \"div\", 8)(41, \"label\", 9);\n          i0.ɵɵtext(42, \"Motivo *\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(43, \"input\", 19);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CitaFormComponent_Template_input_ngModelChange_43_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.cita.motivo, $event) || (ctx.cita.motivo = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(44, \"div\", 8)(45, \"label\", 9);\n          i0.ɵɵtext(46, \"Costo de Consulta (S/)\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(47, \"input\", 20);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CitaFormComponent_Template_input_ngModelChange_47_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.cita.costoConsulta, $event) || (ctx.cita.costoConsulta = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(48, \"div\", 8)(49, \"label\", 9);\n          i0.ɵɵtext(50, \"Observaciones\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(51, \"textarea\", 21);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function CitaFormComponent_Template_textarea_ngModelChange_51_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.cita.observaciones, $event) || (ctx.cita.observaciones = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(52, \"div\", 22)(53, \"button\", 23);\n          i0.ɵɵlistener(\"click\", function CitaFormComponent_Template_button_click_53_listener() {\n            return ctx.volver();\n          });\n          i0.ɵɵelement(54, \"i\", 24);\n          i0.ɵɵtext(55, \" Cancelar \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(56, \"button\", 25);\n          i0.ɵɵelement(57, \"i\", 26);\n          i0.ɵɵtext(58);\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate1(\" \", ctx.esEdicion ? \"Editar Cita\" : \"Nueva Cita\", \" \");\n          i0.ɵɵadvance(6);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.cita.mascota.idMascota);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"value\", 0);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.mascotas);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.cita.fechaHora);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.cita.duracionMinutos);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.duraciones);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.cita.tipoCita);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngForOf\", ctx.tiposCita);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.cita.estado);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.estados);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.cita.motivo);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.cita.costoConsulta);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.cita.observaciones);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.enviando);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"disabled\", ctx.enviando);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.enviando ? \"Guardando...\" : \"Guardar\", \" \");\n        }\n      },\n      dependencies: [i4.NgForOf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.NumberValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.MinValidator, i5.NgModel, i5.NgForm],\n      styles: [\".card[_ngcontent-%COMP%]{box-shadow:0 0 10px #0000001a}.card-header[_ngcontent-%COMP%]{background-color:#f8f9fa;border-bottom:2px solid #dee2e6}.card-header[_ngcontent-%COMP%]   h4[_ngcontent-%COMP%]{margin:0;color:#495057}.form-label[_ngcontent-%COMP%]{font-weight:500;color:#495057}.form-control[_ngcontent-%COMP%]:focus, .form-select[_ngcontent-%COMP%]:focus{border-color:#80bdff;box-shadow:0 0 0 .2rem #007bff40}\"]\n    });\n  }\n  return CitaFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}