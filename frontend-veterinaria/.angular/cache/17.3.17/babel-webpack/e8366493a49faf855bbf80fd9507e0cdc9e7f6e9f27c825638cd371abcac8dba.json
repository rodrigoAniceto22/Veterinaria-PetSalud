{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CitaService = /*#__PURE__*/(() => {\n  class CitaService {\n    http;\n    apiUrl = 'http://localhost:8080/api/citas';\n    constructor(http) {\n      this.http = http;\n    }\n    listarTodas() {\n      return this.http.get(this.apiUrl);\n    }\n    obtenerPorId(id) {\n      return this.http.get(`${this.apiUrl}/${id}`);\n    }\n    buscarPorMascota(idMascota) {\n      return this.http.get(`${this.apiUrl}/mascota/${idMascota}`);\n    }\n    buscarPorVeterinario(idVeterinario) {\n      return this.http.get(`${this.apiUrl}/veterinario/${idVeterinario}`);\n    }\n    buscarPorEstado(estado) {\n      return this.http.get(`${this.apiUrl}/estado/${estado}`);\n    }\n    obtenerCitasDelDia() {\n      return this.http.get(`${this.apiUrl}/hoy`);\n    }\n    obtenerCitasProximas() {\n      return this.http.get(`${this.apiUrl}/proximas`);\n    }\n    obtenerCitasCriticas() {\n      return this.http.get(`${this.apiUrl}/criticas`);\n    }\n    obtenerCitasConAlertas() {\n      return this.http.get(`${this.apiUrl}/con-alertas`);\n    }\n    obtenerDashboardAlertas() {\n      return this.http.get(`${this.apiUrl}/dashboard-alertas`);\n    }\n    crear(cita) {\n      return this.http.post(this.apiUrl, cita);\n    }\n    actualizar(id, cita) {\n      return this.http.put(`${this.apiUrl}/${id}`, cita);\n    }\n    confirmar(id) {\n      return this.http.patch(`${this.apiUrl}/${id}/confirmar`, null);\n    }\n    cancelar(id, motivo) {\n      const params = motivo ? new HttpParams().set('motivo', motivo) : undefined;\n      return this.http.patch(`${this.apiUrl}/${id}/cancelar`, null, {\n        params\n      });\n    }\n    completar(id) {\n      return this.http.patch(`${this.apiUrl}/${id}/completar`, null);\n    }\n    marcarRecordatorioEnviado(id) {\n      return this.http.patch(`${this.apiUrl}/${id}/recordatorio-enviado`, null);\n    }\n    eliminar(id) {\n      return this.http.delete(`${this.apiUrl}/${id}`);\n    }\n    static ɵfac = function CitaService_Factory(t) {\n      return new (t || CitaService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CitaService,\n      factory: CitaService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return CitaService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}